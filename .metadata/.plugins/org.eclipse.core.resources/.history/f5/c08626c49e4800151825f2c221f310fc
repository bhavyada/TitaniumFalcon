//============================================================================
// Name        : Detect_a_loop_and_remove.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

// This program is an illustration to detect a loop and find the entry node and also remove the loop


#include<stdio.h>
#include<stdlib.h>
#include<iostream>

struct Node
{
	int Data;
	struct Node* Next;
};

int main()
{
	struct Node* node5 = (struct Node*)malloc(sizeof(struct Node));
	node5->Data = 5;
	node5->Next = NULL;
	struct Node* node4 = (struct Node*)malloc(sizeof(struct Node));
	node4->Data = 4;
	node4->Next = node5;
	struct Node* node3 = (struct Node*)malloc(sizeof(struct Node));
	node3->Data = 3;
	node3->Next = node4;
	struct Node* node2 = (struct Node*)malloc(sizeof(struct Node));
	node2->Data = 2;
	node2->Next = node3;
	struct Node* node1 = (struct Node*)malloc(sizeof(struct Node));
	node1->Data = 1;
	node1->Next = node2;

	struct Node* head = node1;
	node5->Next = node2;

	struct Node* Node = EntryNode(head);
	printf("\nEntry point of loop is at Node %d",Node->Data);
	return 0;

}
